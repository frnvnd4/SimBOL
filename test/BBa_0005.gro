include gro

// Global Simulation Parameters
set ("dt", 0.1 ); // Timestep in minutes
set ("population_max", 20000 ); // Maximum cell population

// Signal Diffusion Parameters
set("signals", 1.0); // Enable signal module
set("signals_draw", 1.0); // Enable signal drawing
grid("continuous", "gro_original", 10, 10, 8); // Grid (type, diffusion_method, length, cell_size, neighborhood_depth)

// Signal Definitions (kdiff = diffusion rate, kdeg = degradation rate)
aTc := s_signal([kdiff := 0.4, kdeg := 0.0001]);

// Gene Definitions
genes([
  name := "Operon_1",
  proteins := {"BBa_C0012", "BBa_E0040"},
  promoter := [function := "AND",
    transcription_factors := {"-BBa_C0012", "-BBa_C0050"},
    noise := [toOn := 0.0, toOff := 0.0, noise_time := 100.0]
  ],
  prot_act_times := [times := {20.0, 15.0}, variabilities := {0.0, 0.0}],
  prot_deg_times := [times := {0.1, 0.1}, variabilities := {0.0, 0.0}]
]);

genes([
  name := "Operon_2",
  proteins := {"BBa_C0040"},
  promoter := [function := "TRUE",
    transcription_factors := {},
    noise := [toOn := 0.0, toOff := 0.0, noise_time := 100.0]
  ],
  prot_act_times := [times := {20.0}, variabilities := {0.0}],
  prot_deg_times := [times := {0.1}, variabilities := {0.0}]
]);

genes([
  name := "Operon_3",
  proteins := {"BBa_C0050"},
  promoter := [function := "OR",
    transcription_factors := {"QS_aTc", "-BBa_C0040"},
    noise := [toOn := 0.0, toOff := 0.0, noise_time := 100.0]
  ],
  prot_act_times := [times := {20.0}, variabilities := {0.0}],
  prot_deg_times := [times := {0.1}, variabilities := {0.0}]
]);

// Plasmid Definitions
plasmids_genes([ p1 := {"Operon_1", "Operon_2", "Operon_3"} ]);

// Quorum Sensing Signal Detection Actions
action({}, "s_get_QS", {tostring(aTc), ">", "0.5", "QS_aTc"});

// Cell Painting Actions (based on protein presence)
action({"BBa_E0040"}, "paint", {"175", "0", "0", "0"});
action({"-BBa_E0040"}, "paint", {"-95", "0", "0", "0"});

program p() := {
  skip();
};

program main() := {
  set("ecoli_growth_rate", 0.03465735902799726);

  s_set_signal(aTc, 50.0, 0.0, 0.0); // Initial one-time placement

  // Initial Cell Population(s) Setup
  c_ecolis(150, 0.0, 0.0, 100.0, {"p1"}, program p());
};
